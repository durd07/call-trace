// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: api/subscriber_tracing.proto

package subscriber_tracing

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscriber_tracing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_tracing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_api_subscriber_tracing_proto_rawDescGZIP(), []int{0}
}

func (x *Bool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type TraceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Supi string `protobuf:"bytes,1,opt,name=supi,proto3" json:"supi,omitempty"`
}

func (x *TraceIdRequest) Reset() {
	*x = TraceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscriber_tracing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceIdRequest) ProtoMessage() {}

func (x *TraceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_tracing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceIdRequest.ProtoReflect.Descriptor instead.
func (*TraceIdRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_tracing_proto_rawDescGZIP(), []int{1}
}

func (x *TraceIdRequest) GetSupi() string {
	if x != nil {
		return x.Supi
	}
	return ""
}

type TraceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId int32 `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *TraceIdResponse) Reset() {
	*x = TraceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscriber_tracing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceIdResponse) ProtoMessage() {}

func (x *TraceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_tracing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceIdResponse.ProtoReflect.Descriptor instead.
func (*TraceIdResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_tracing_proto_rawDescGZIP(), []int{2}
}

func (x *TraceIdResponse) GetTraceId() int32 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

type SubscriberTracingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId   int32  `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Supi      string `protobuf:"bytes,2,opt,name=supi,proto3" json:"supi,omitempty"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Msg       string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SubscriberTracingRequest) Reset() {
	*x = SubscriberTracingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscriber_tracing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberTracingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberTracingRequest) ProtoMessage() {}

func (x *SubscriberTracingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_tracing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberTracingRequest.ProtoReflect.Descriptor instead.
func (*SubscriberTracingRequest) Descriptor() ([]byte, []int) {
	return file_api_subscriber_tracing_proto_rawDescGZIP(), []int{3}
}

func (x *SubscriberTracingRequest) GetTraceId() int32 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *SubscriberTracingRequest) GetSupi() string {
	if x != nil {
		return x.Supi
	}
	return ""
}

func (x *SubscriberTracingRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SubscriberTracingRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type WatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Supi []string `protobuf:"bytes,1,rep,name=supi,proto3" json:"supi,omitempty"`
}

func (x *WatchResponse) Reset() {
	*x = WatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscriber_tracing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResponse) ProtoMessage() {}

func (x *WatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscriber_tracing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResponse.ProtoReflect.Descriptor instead.
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return file_api_subscriber_tracing_proto_rawDescGZIP(), []int{4}
}

func (x *WatchResponse) GetSupi() []string {
	if x != nil {
		return x.Supi
	}
	return nil
}

var File_api_subscriber_tracing_proto protoreflect.FileDescriptor

var file_api_subscriber_tracing_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x22, 0x1c, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x75, 0x70, 0x69, 0x22, 0x2c, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x75, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x75, 0x70,
	0x69, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x23, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x70, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x75, 0x70, 0x69, 0x32, 0xc9, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x59, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x24, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x12, 0x2e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x22, 0x00, 0x42, 0x65, 0x0a, 0x23, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x42, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x75, 0x72, 0x64, 0x30, 0x37, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_subscriber_tracing_proto_rawDescOnce sync.Once
	file_api_subscriber_tracing_proto_rawDescData = file_api_subscriber_tracing_proto_rawDesc
)

func file_api_subscriber_tracing_proto_rawDescGZIP() []byte {
	file_api_subscriber_tracing_proto_rawDescOnce.Do(func() {
		file_api_subscriber_tracing_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_subscriber_tracing_proto_rawDescData)
	})
	return file_api_subscriber_tracing_proto_rawDescData
}

var file_api_subscriber_tracing_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_subscriber_tracing_proto_goTypes = []interface{}{
	(*Bool)(nil),                     // 0: subscribertracing.v1.Bool
	(*TraceIdRequest)(nil),           // 1: subscribertracing.v1.TraceIdRequest
	(*TraceIdResponse)(nil),          // 2: subscribertracing.v1.TraceIdResponse
	(*SubscriberTracingRequest)(nil), // 3: subscribertracing.v1.SubscriberTracingRequest
	(*WatchResponse)(nil),            // 4: subscribertracing.v1.WatchResponse
}
var file_api_subscriber_tracing_proto_depIdxs = []int32{
	1, // 0: subscribertracing.v1.SubscriberTracing.trace_id:input_type -> subscribertracing.v1.TraceIdRequest
	3, // 1: subscribertracing.v1.SubscriberTracing.sub_trace:input_type -> subscribertracing.v1.SubscriberTracingRequest
	2, // 2: subscribertracing.v1.SubscriberTracing.trace_id:output_type -> subscribertracing.v1.TraceIdResponse
	0, // 3: subscribertracing.v1.SubscriberTracing.sub_trace:output_type -> subscribertracing.v1.Bool
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_subscriber_tracing_proto_init() }
func file_api_subscriber_tracing_proto_init() {
	if File_api_subscriber_tracing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_subscriber_tracing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscriber_tracing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscriber_tracing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscriber_tracing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberTracingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscriber_tracing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_subscriber_tracing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_subscriber_tracing_proto_goTypes,
		DependencyIndexes: file_api_subscriber_tracing_proto_depIdxs,
		MessageInfos:      file_api_subscriber_tracing_proto_msgTypes,
	}.Build()
	File_api_subscriber_tracing_proto = out.File
	file_api_subscriber_tracing_proto_rawDesc = nil
	file_api_subscriber_tracing_proto_goTypes = nil
	file_api_subscriber_tracing_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SubscriberTracingClient is the client API for SubscriberTracing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubscriberTracingClient interface {
	TraceId(ctx context.Context, in *TraceIdRequest, opts ...grpc.CallOption) (*TraceIdResponse, error)
	//rpc watch(TraceIdRequest) returns (stream WatchResponse) {}
	SubTrace(ctx context.Context, in *SubscriberTracingRequest, opts ...grpc.CallOption) (*Bool, error)
}

type subscriberTracingClient struct {
	cc grpc.ClientConnInterface
}

func NewSubscriberTracingClient(cc grpc.ClientConnInterface) SubscriberTracingClient {
	return &subscriberTracingClient{cc}
}

func (c *subscriberTracingClient) TraceId(ctx context.Context, in *TraceIdRequest, opts ...grpc.CallOption) (*TraceIdResponse, error) {
	out := new(TraceIdResponse)
	err := c.cc.Invoke(ctx, "/subscribertracing.v1.SubscriberTracing/trace_id", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subscriberTracingClient) SubTrace(ctx context.Context, in *SubscriberTracingRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/subscribertracing.v1.SubscriberTracing/sub_trace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubscriberTracingServer is the server API for SubscriberTracing service.
type SubscriberTracingServer interface {
	TraceId(context.Context, *TraceIdRequest) (*TraceIdResponse, error)
	//rpc watch(TraceIdRequest) returns (stream WatchResponse) {}
	SubTrace(context.Context, *SubscriberTracingRequest) (*Bool, error)
}

// UnimplementedSubscriberTracingServer can be embedded to have forward compatible implementations.
type UnimplementedSubscriberTracingServer struct {
}

func (*UnimplementedSubscriberTracingServer) TraceId(context.Context, *TraceIdRequest) (*TraceIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TraceId not implemented")
}
func (*UnimplementedSubscriberTracingServer) SubTrace(context.Context, *SubscriberTracingRequest) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubTrace not implemented")
}

func RegisterSubscriberTracingServer(s *grpc.Server, srv SubscriberTracingServer) {
	s.RegisterService(&_SubscriberTracing_serviceDesc, srv)
}

func _SubscriberTracing_TraceId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TraceIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriberTracingServer).TraceId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subscribertracing.v1.SubscriberTracing/TraceId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriberTracingServer).TraceId(ctx, req.(*TraceIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubscriberTracing_SubTrace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriberTracingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriberTracingServer).SubTrace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subscribertracing.v1.SubscriberTracing/SubTrace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriberTracingServer).SubTrace(ctx, req.(*SubscriberTracingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubscriberTracing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "subscribertracing.v1.SubscriberTracing",
	HandlerType: (*SubscriberTracingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "trace_id",
			Handler:    _SubscriberTracing_TraceId_Handler,
		},
		{
			MethodName: "sub_trace",
			Handler:    _SubscriberTracing_SubTrace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/subscriber_tracing.proto",
}
